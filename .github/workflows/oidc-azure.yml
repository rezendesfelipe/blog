name: Run Azure Login with OIDC
on: [push]

permissions:
  id-token: write
  contents: read
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./OIDC-Terraform-GH-AZ
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v2
        with:     
          client-id: ${{secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}          

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        env:
          STORAGE_ACCOUNT: ${{secrets.STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{secrets.CONTAINER_NAME }}
          RESOURCE_GROUP_NAME: ${{secrets.RESOURCE_GROUP_NAME }}
          client-id: ${{secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME" -backend-config="client_id=$AZURE_CLIENT_ID" -backend-config="tenant_id=$AZURE_TENANT_ID" -backend-config="subscription_id=$AZURE_SUBSCRIPTION_ID"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        env:
          client-id: ${{secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform plan -input=false

      # Ao realizar o "push" na main, provisiona a infra. do Terraform
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          client-id: ${{secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve -input=false
      
